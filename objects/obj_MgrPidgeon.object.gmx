<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 3;
alarm[1] = 5;

//Score and time, 
scorePidgeon = global.pidgeon_difficulty;
alarm_set(2, 30*20);
finished = false;
victory = false;
obj_pointer_pidgeon.direction = 90;
canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
finished =true;
alarm[0] = 0;
alarm[1] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aleatory = irandom(380);

instance_create(600, aleatory, obj_pidgeon);

alarm[1] = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aleatory = irandom(380);

pidgeon = instance_create(0, aleatory, obj_pidgeon);
pidgeon.image_xscale = -1;

alarm[0] = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the keys
key_left = keyboard_check(vk_left) || gamepad_button_check(0, gp_padl);
key_right = keyboard_check(vk_right) || gamepad_button_check( 0, gp_padr);
key_space_pressed = keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0, gp_face1);
key_space_released = keyboard_check_released(vk_space) || gamepad_button_check_released(0, gp_face1);
   
    
obj_pointer_pidgeon.direction -= -key_left + key_right;
obj_pointer_pidgeon.direction = clamp(obj_pointer_pidgeon.direction, 10, 170);
obj_pointer_pidgeon.image_angle = obj_pointer_pidgeon.direction;

if(key_space_pressed == true &amp;&amp; canShoot == true)
{
    //Throwing the ball
    ball = instance_create(obj_pointer_pidgeon.x, obj_pointer_pidgeon.y, obj_ball_pidgeon);
    ball.direction = obj_pointer_pidgeon.direction;
    ball.speed = 10;
    image_angle = direction;
    canShoot = false;
    alarm[3] = 10;
}

//Number of dead pidgeons
if (scorePidgeon &lt;= 0)
{
    finished = true;
    victory = true;
    alarm[0] = 0;
}

if((key_space_pressed == true) &amp;&amp; (finished == true))
{
    if (victory == true)
    {
        global.pidgeon_difficulty += 2;
        global.reputation += 1;
    }
    else
    {
        if (global.pidgeon_difficulty &gt; 2)
        {
            global.pidgeon_difficulty -= 2;
            global.reputation -= 1;
        }
    }
    room_goto(global.last_place);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Text parameters
draw_set_halign(fa_center);
draw_set_valign(fa_center);


//If finished, show the winner
if(finished == true)
{
    if(victory = true)
    {
        draw_text(room_width/2, room_height/2, "¡¡YOU WIN!!");
        draw_set_font(font_sacha);
        draw_set_color(c_blue);
    }
    else
    {
        draw_text(room_width/2, room_height/2, "¡¡YOU LOSE!!");
        draw_set_font(font_sacha);
        draw_set_colour(c_red);
    }
}
else
{
    draw_set_font(font_culdesac);
    draw_set_colour(c_white);
    draw_sprite(spr_window_pidgeon,0,325,5);
    draw_text(440, 20, "PIDGEONS TO KILL: "+string(scorePidgeon) );
    draw_text(440, 50, "TIME: " + string(int64(alarm[2]/30)) );
    
    
    

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
