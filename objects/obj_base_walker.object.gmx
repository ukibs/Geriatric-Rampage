<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//variables
movement_speed = 4;
alarm_set(0, 1);
/*
    0 - Stopped
    1 - Moving
    2 - Depends of mother or kid
*/
status = irandom(2);
direction_to_move = 0;
movementX = 0;
movementY = 0;
//Change this in each mother/kid
//Sprites for the character
sprite_to_useUp     = spr_sexyGirl1_up;
sprite_to_useDown   = spr_sexyGirl1_down;
sprite_to_useLeft   = spr_sexyGirl1_left;
sprite_to_useRight  = spr_sexyGirl1_right;
//Set one
sprite_to_use = sprite_to_useDown;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(status == 1){
    //Decide a direction and move
    movementX = 0;
    movementY = 0;
    direction_to_move = irandom(4);
    //And change status
    status = 0;
}
else if(status == 0){
    status = 1;
}
//Set a new alarm
alarm_set(0, random_range(10, 50));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Control to not collide, and change direction
if(place_meeting(x+hspeed, y+vspeed, obj_wall)){
    alarm_set(0, 1);
    hspeed = 0;
    vspeed = 0;
}
//Control to not go out of the place
if(x+hspeed &lt; image_xscale/2 || x+hspeed &gt; room_width - image_xscale/2
    || y+vspeed &lt; image_yscale/2 || y+vspeed &gt; room_height - image_yscale/2){
    alarm_set(0, 1);
    hspeed = 0;
    vspeed = 0;
}
//Go according direction selected
switch(direction_to_move){
    case 0: //Left
        movementX = -1;
        sprite_to_use = sprite_to_useLeft;
        break;
    case 1: //Right
        movementX = 1;
        sprite_to_use = sprite_to_useRight;
        break;
    case 2: //Up
        movementY = -1;
        sprite_to_use = sprite_to_useUp;
        break;
    case 3: //Down
        movementY = 1;
        sprite_to_use = sprite_to_useDown;
        break;
}
sprite_index = sprite_to_use;
//Set speeds
hspeed = movementX * movement_speed;
vspeed = movementY * movement_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the player stationary
if(hspeed == 0 &amp;&amp; vspeed == 0)
    draw_sprite(sprite_to_use, 2, x, y);
//Or in movement
else
    draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
