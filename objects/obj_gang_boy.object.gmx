<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_generic_man_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
movement_speed = 4;
//Get the player
player = instance_find(obj_kotb_player,0);
/*Status
    0 - Walking to the player
    1 - Flying from the slap
    2 -
    3 - Running like a girl
*/
status = 0;
prevStatus = 0;
life = 100;
prevX = x;
prevY = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Return to the previous status
status = prevStatus;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check status
switch(status){
    //Go to the player
    case 0:
        direction = point_direction(x,y,player.x, player.y);
        speed = movement_speed;
        break;
    //Get slapped
    case 1:
        speed = movement_speed * 2;
        break;
    case 2:
        break;
    //Run away
    case 3:
        direction = point_direction(x,y,player.x, player.y) + 180;
        speed = movement_speed * 2;
        break;
}
//Check life
if(life &lt;= 0){
    status = 3;
}
//Check run away 
if(status == 3 &amp;&amp; (x &lt; 0 || x &gt; room_width || y &lt; 0 || y &gt; room_height)){
    instance_destroy();
}
//Check direction facing
switch(int64((direction+45)/90)){
    case 1:
        sprite_index = spr_generic_man_up;
        break;
    case 2:
        sprite_index = spr_generic_man_Left;
        break;
    case 3:
        sprite_index = spr_generic_man_down;
        break;
    default:
        sprite_index = spr_generic_man_Right;
        break;
}
//Check distance to the player for collission stuff
distance_to_player = distance_to_object(player);

//Check if there are walls on the path and move around
//HAbr√° que retocarlo
wall_check = collision_line(x,y,player.x, player.y, obj_wall, false, true);
if(wall_check != noone &amp;&amp; status == 0)
    direction += 45;
//Save the actual x and y, and status
prevX = x;
prevY = y;
if(prevStatus != 1){
    prevStatus = status;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_gang_boy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check if the mate is nearer to the player
if(other.distance_to_player &lt; distance_to_player &amp;&amp; status == 0){
    //direction = point_direction(x, y, other.x, other.y);
    //move_outside_all(direction, 100);
    x = prevX;
    y = prevY;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Unstuck from the wall
if(status != 1){
    direction = point_direction(x, y, other.x, other.y);
    move_outside_solid(direction, 100);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
