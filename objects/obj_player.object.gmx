<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_walking_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_walking_down</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables de velocidad
hsp = 0;
vsp = 0;
h_direction = 0;
v_direction = 0;
movement_speed = 8;
//Status variables
status_still = false;
inventory_open = false;
sprite_to_use = spr_walking_down;
/*Direction the player is looking
    0 - Right
    90 - Up
    180 - Left
    270 - Down
*/
direction_looking = 270;
//Create and get the interactor
interactor = instance_create(x,y,obj_interactor);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the keys
key_left = keyboard_check(vk_left);
key_right = keyboard_check(vk_right);
key_up = keyboard_check(vk_up);
key_down = keyboard_check(vk_down);
key_inventory = keyboard_check_pressed(ord("I"));
key_map = keyboard_check_pressed(ord("M"));
//If we arenÂ´t still by the pause or conversation
if(status_still == false){
    //Move the player
    h_direction = -key_left + key_right;
    v_direction = -key_up + key_down;
    hsp = (-key_left + key_right) * movement_speed;
    vsp = (-key_up + key_down) * movement_speed;
    //(To not) Collision control
    if(!place_free(x + hsp,y)){
        while(!place_free(x + hsp,y))
            hsp -= sign(hsp);
    }
    if(!place_free(x,y + vsp)){
        while(!place_free(x,y + vsp))
            vsp -= sign(vsp);
    }
    //Using x,y
    x += hsp;
    y += vsp;
    //Changing sprite
    if(h_direction &lt; 0)
        sprite_index = spr_walking_left;
    if(h_direction &gt; 0)
        sprite_index = spr_walking_right;
    if(v_direction &lt; 0)
        sprite_index = spr_walking_up;
    if(v_direction &gt; 0)
        sprite_index = spr_walking_down;
    //Get that sprite
        sprite_to_use = sprite_index;
    //Get the direction
    switch(sprite_to_use){
        case spr_walking_left:
            direction = 180;
            break;
        case spr_walking_right:
            direction = 0;
            break;
        case spr_walking_up:
            direction = 90;
            break;
        case spr_walking_down:
            direction = 270;
            break;
    }
    direction_looking = direction;
    if(key_map == true){
        room_goto(room_map);
        //global.last_place = room_get_name(room);
    }
    if(key_inventory == true){
        status_still = true;
        inventory_open = true;
        //"Release" the key
        key_inventory = false;
    }
}
//Controls for the inventory
if(inventory_open == true){
    if(key_inventory == true){
        status_still = false;
        inventory_open = false;
        //"Release" the key
        key_inventory = false;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_exit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Vamos al mapa
room_goto(room_map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the player stationary
if(hsp == 0 &amp;&amp; vsp == 0)
    draw_sprite(sprite_to_use, 2, x, y);
//Or in movement
else
    draw_self();
//
//draw_text(60, 60, key_inventory);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
